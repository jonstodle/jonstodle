<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE root[ 
<!ELEMENT BlogPage ANY>
<!ATTLIST BlogPage id ID #REQUIRED>
<!ELEMENT BlogPost ANY>
<!ATTLIST BlogPost id ID #REQUIRED>
<!ELEMENT Home ANY>
<!ATTLIST Home id ID #REQUIRED>
<!ELEMENT Project ANY>
<!ATTLIST Project id ID #REQUIRED>
<!ELEMENT ProjectsPage ANY>
<!ATTLIST ProjectsPage id ID #REQUIRED>

]>
<root id="-1">
  <Home id="1050" parentID="-1" level="1" creatorID="0" sortOrder="0" createDate="2015-04-16T23:39:46" updateDate="2015-04-18T17:56:38" nodeName="Home" urlName="home" path="-1,1050" isDoc="" nodeType="1048" creatorName="Jon Stødle" writerName="Jon Stødle" writerID="0" template="1047" nodeTypeAlias="Home">
    <siteTitle><![CDATA[Jon<br/>Stødle]]></siteTitle>
    <twitterName><![CDATA[jonstodle]]></twitterName>
    <twitterUrl><![CDATA[https://twitter.com/jonstodle]]></twitterUrl>
    <tabText><![CDATA[Jon]]></tabText>
    <title><![CDATA[Bio]]></title>
    <text><![CDATA[<p><strong>Name</strong>: Jon Stødle</p>
<p><strong>Age</strong>: !!age!!</p>
<p><strong>Nationality</strong>: Norwegian</p>
<p><strong>Occupation</strong>: IT Support</p>
<p><strong>Hobbies</strong>: Gaming, Programming</p>
<p><strong>Likes</strong>: Cute girls</p>
<p><strong>Hates</strong>: Tomatoes, Pineapples and those popcorn pieces that get stuck in your teeth</p>
<p>This is my homepage. Feel free to poke around if you want. You'll find projects I am or have been working on - and that's pretty much it.</p>]]></text>
    <image><![CDATA[{
  "focalPoint": {
    "left": 0.43426294820717132,
    "top": 0.50199203187251
  },
  "src": "/media/1001/me.jpg",
  "crops": [
    {
      "alias": "300x500",
      "width": 300,
      "height": 500
    }
  ]
}]]></image>
    <BlogPage id="1059" parentID="1050" level="2" creatorID="0" sortOrder="0" createDate="2015-04-19T23:13:32" updateDate="2015-04-19T23:13:32" nodeName="Blog" urlName="blog" path="-1,1050,1059" isDoc="" nodeType="1058" creatorName="Jon Stødle" writerName="Jon Stødle" writerID="0" template="1057" nodeTypeAlias="BlogPage">
      <title><![CDATA[Soap Box]]></title>
      <BlogPost id="1069" parentID="1059" level="3" creatorID="0" sortOrder="1" createDate="2015-04-21T16:09:34" updateDate="2015-04-21T16:09:34" nodeName="Will the PDK clean up Android?" urlName="will-the-pdk-clean-up-android" path="-1,1050,1059,1069" isDoc="" nodeType="1060" creatorName="Jon Stødle" writerName="Jon Stødle" writerID="0" template="0" nodeTypeAlias="BlogPost">
        <title><![CDATA[Will the PDK clean up Android?]]></title>
        <content><![CDATA[<p>No.</p>
<p>That's the simple fact of it, no. Android's problem isn't just the fact that the hardware isn't getting the latest updates it's the fact that the hardware vendors have the freedom to do what the they want. Of course, this is one of the great advantages of Android and the devices that run it; the great diversity and choice. There's an Android device for everyone.</p>
<p>The problem however is that some of the hardware vendors (read all) think they can do a better job than Google designing Android. One of the best examples of this is the HTC One X: HTC has altered the way multitasking is handled in the operating system, making it much more aggressive to close apps, resulting in frustration for some power users. According to them the added feature produces unwanted behavior. For most users though it should result in better battery life, which is something Android is notoriously bad at.</p>
<p>Thankfully, not all hardware vendors considers themselves hardware engineering geniuses and leave a lot of the designs of Android to Google, and stick to making smaller, cosmetic changes and improvements. Some adding tighter and/or better integration with different services to differentiate themselves from the competition. While this might a good thing in theory, it adds confusion in reality: one of the strengths of the iPhone or Windows Phone devices is a consistent experience. If you pick one device up, there's no confusion to use it; if you've used one before, you'll know how to use this one too.</p>
<p>In the early days of Android I didn't mind this customization too much, I agreed with the hardware vendors: Android is far from perfect, let's help Google make it better. As both years and versions has passed by, Android has gotten better and better, even at integration with other services. I'm the first admit that Android still isn't perfect is something as close to it as can be. I think that it's finally surpassed iPhone and Windows Phone hasn't caught up quite yet. Windows Phone is at the place where Android was a <a href="http://xkcd.com/1070/">few</a> years ago.</p>
<p>With the legendary 4.0, Ice Cream Sandwich, release of Android, the mobile operating system finally grew up and become not only beautiful, but also polished; more so than ever before. The UI didn't only look good and distinct without looking like something designed in the early 2000s, it actually looks modern and sleek. The experience was snappy (at least on the devices I've tried) and it felt like something that could seriously compete with the iPhone. At this point Android had also surpassed the iPhone when it came to features, the place it should have. Android was made for a lot of features and it's finally there, the iPhone can't keep up and shouldn't; the iPhone is not the device with all e features one. An think of, it the device that looks good while using it.</p>
<p>The recently announced 4.1, Jelly Beans, will add some features that the iPhone did better, and refine and improve some that the iPhone still doesn't do as well. With 4.1 Android suddenly became tempting again to me. I stopped using Android two years back and didn't think I'd never want to go back, but Google proved me wrong. With the announcement of the new version, there was also the announcement of the PDK, Platform Development Kit, an SDK for hardware vendors.</p>
<p>The PDK is Google's latest attempt to make hardware vendors port their custom software into the newest version of Android at a much quicker pace, something that I don't think is the main problem. The main problem is the customization itself, in my mind the only proper Android experience is on the Nexus line devices. I would only call Android on other devices a passable experience and sub-par to the one you'll be having on a "proper" Android device. While I'd admit that the Improved battery life of the One X is preferable, but the rest of the experience is not desirable to the default one on the Nexus devices.</p>
<p>All in all, I don't think that Android can be "saved" from the hardware vendors, but it can be properly experienced on the Nexus range. Although I'm mostly invested in Windows Phone myself, I can't deny that I have a general interest what's going on in the "enemy" camps. There's nothing more that I want, than to other platforms to succeed at something, making the competitors scrambling to make something comparable, that's called innovation and progress.</p>
<p id="yui_3_17_2_3_1429625168973_955">I dont think that Android can move away from it's current situation but it'll push it's competitors to make improvements and continue to make better experiences and products.</p>]]></content>
      </BlogPost>
      <BlogPost id="1070" parentID="1059" level="3" creatorID="0" sortOrder="1" createDate="2015-04-21T16:11:17" updateDate="2015-04-21T16:11:17" nodeName="Does IsolatedStorageSettings persist through an app update?" urlName="does-isolatedstoragesettings-persist-through-an-app-update" path="-1,1050,1059,1070" isDoc="" nodeType="1060" creatorName="Jon Stødle" writerName="Jon Stødle" writerID="0" template="0" nodeTypeAlias="BlogPost">
        <title><![CDATA[Does IsolatedStorageSettings persist through an app update?]]></title>
        <content><![CDATA[<p>This was a question I ended up asking myself as I was about to push my first update to <a href="http://quotelistapp.com/">Quote List</a>. My first thought was "Yes", that seems the logical answer. The data that I put there are persistent through application launches and I've made sure the code to handle this data checks whether there's data stored already, to prevent overwriting existing data.</p>
<p>As it turns out, the updating of an app doesn't touch the data stored in IsolatedStorageSettings. So, as long as you've written proper code that checks for existing data and prevents the app to overwrite said data if it's present, there's no worry.</p>
<p id="yui_3_17_2_3_1429625168973_1207">Of course this is the expected and probable behavior, but the fact was; I couldn't find anyone actually confirming this on the web. So my goal with this (rather short) post is to aid the next aspiring developer who wonders the same thing: Does IsolatedStorageSettings persist through an app update?</p>]]></content>
      </BlogPost>
      <BlogPost id="1071" parentID="1059" level="3" creatorID="0" sortOrder="2" createDate="2015-04-21T16:13:01" updateDate="2015-04-21T16:13:01" nodeName="Dynamic application title on Windows Phone 7.x using recources" urlName="dynamic-application-title-on-windows-phone-7x-using-recources" path="-1,1050,1059,1071" isDoc="" nodeType="1060" creatorName="Jon Stødle" writerName="Jon Stødle" writerID="0" template="0" nodeTypeAlias="BlogPost">
        <title><![CDATA[Dynamic application title on Windows Phone 7.x using recources]]></title>
        <content><![CDATA[<div class="row sqs-row">
<div class="col sqs-col-12 span-12">
<div id="block-07ac95aa7593e2354cf5" class="sqs-block html-block sqs-block-html" data-block-type="2">
<div class="sqs-block-content">
<p>I was developing a stupidly simple application for personal use and came up with a humorous idea. I wanted the application title on top of the app pages to also show the version. However I didn't want to add code to every code-behind file to make it so. I came up with the idea of adding the string, used as the application title, to the application resources. Then I used a simple binding to make it all happen.</p>
</div>
</div>
</div>
</div>
<div id="yui_3_17_2_3_1429625168973_896" class="row sqs-row">
<div id="yui_3_17_2_3_1429625168973_895" class="col sqs-col-12 span-12">
<div id="block-a740e013b2ddc38dcf2a" class="sqs-block code-block sqs-block-code" data-block-type="23">
<div id="yui_3_17_2_3_1429625168973_894" class="sqs-block-content">
<pre class="source-code"><span class="cm-comment">&lt;!-- In App.xaml --&gt;</span><br /><span class="cm-tag">&lt;Application.Resources</span><span class="cm-tag">&gt;</span><br />    <span class="cm-tag">&lt;sys:String</span> <span class="cm-attribute">x:Key</span>=<span class="cm-string">"ApplicationTitle"</span><span class="cm-tag">&gt;</span>FUEL CONSUMPTION - v1.0<span class="cm-tag">&lt;/sys:String</span><span class="cm-tag">&gt;</span><br /><span class="cm-tag">&lt;/Application.Resources</span><span class="cm-tag">&gt;</span></pre>
</div>
</div>
<div id="block-8f1258ad58c0b97a8070" class="sqs-block code-block sqs-block-code" data-block-type="23">
<div class="sqs-block-content">
<pre class="source-code"><span class="cm-comment">&lt;!-- In MainPage.xaml --&gt;</span><br /><span class="cm-tag">&lt;StackPanel</span> <span class="cm-attribute">x:Name</span>=<span class="cm-string">"TitlePanel"</span> <span class="cm-attribute">Grid.Row</span>=<span class="cm-string">"0"</span> <span class="cm-attribute">Margin</span>=<span class="cm-string">"12,17,0,28"</span><span class="cm-tag">&gt;</span><br />    <span class="cm-tag">&lt;TextBlock</span> <span class="cm-attribute">x:Name</span>=<span class="cm-string">"ApplicationTitle"</span> <span class="cm-attribute">Text</span>=<span class="cm-string">"{StaticResource ApplicationTitle}"</span> <span class="cm-attribute">Style</span>=<span class="cm-string">"{StaticResource PhoneTextNormalStyle}"</span><span class="cm-tag">/&gt;</span><br /><span class="cm-tag">&lt;/StackPanel</span><span class="cm-tag">&gt;</span></pre>
</div>
</div>
<div id="block-3a4e4c02ae1a8d83391d" class="sqs-block html-block sqs-block-html" data-block-type="2">
<div class="sqs-block-content">
<p>This worked excellently, but; I didn't want to add the version to the resources everytime i updated the application. Of course this is a bit lazy since it's not that much of a hassle, but there's something a bit more cool about it updating by itself.</p>
<p>To make this dynamic I needed to do some coding in C#: To get the version number of the application i fetched the version number of the assembly. The version number of the assembly is set by right clicking the project in Visual Studio and click Properties. From there you click on Assembly Information and edit the version numbering there. The resources are represented by a ResourceDictionary and I tried this approach:</p>
</div>
</div>
<div id="block-e443deec5f68df0ed8ed" class="sqs-block code-block sqs-block-code" data-block-type="23">
<div class="sqs-block-content">
<pre class="source-code"><span class="cm-comment">// In MainPage.xaml#PhoneApplicationPage_Loaded event handler</span><br /><br /><span class="cm-comment">// Get the version number from the assembly</span><br /><span class="cm-keyword">var</span> <span class="cm-variable">nameHelper</span> = <span class="cm-keyword">new</span> <span class="cm-variable">System</span>.<span class="cm-property">Reflection</span>.<span class="cm-property">AssemblyName</span>(<span class="cm-variable">System</span>.<span class="cm-property">Reflection</span>.<span class="cm-property">Assembly</span>.<span class="cm-property">GetExecutingAssembly</span>().<span class="cm-property">FullName</span>);<br /><br /><span class="cm-comment">// Set the new string as the resource string</span><br /><span class="cm-variable">Application</span>.<span class="cm-property">Current</span>.<span class="cm-property">Resources</span>[<span class="cm-string">"ApplicationTitle"</span>] = <span class="cm-variable">string</span>.<span class="cm-property">Format</span>(<span class="cm-string">"FUEL CONSUMPTION - v{0}.{1}"</span>, <span class="cm-variable">nameHelper</span>.<span class="cm-property">Version</span>.<span class="cm-property">Major</span>.<span class="cm-property">ToString</span>(), <span class="cm-variable">nameHelper</span>.<span class="cm-property">Version</span>.<span class="cm-property">Minor</span>.<span class="cm-property">ToString</span>()));</pre>
</div>
</div>
</div>
</div>
<div class="row sqs-row">
<div class="col sqs-col-12 span-12">
<div id="block-6876cad19e8f40321d29" class="sqs-block html-block sqs-block-html" data-block-type="2">
<div class="sqs-block-content">
<p>This didn't work to well though. Every time I tried doing this, a NotImplementedException was thrown at me. After some googling around it turned out that the setter for entries in the ResourceDictionary only does this one thing; throw an NotImplementedException. I went onto the big, wide interwebs and asked on <a href="http://stackoverflow.com/questions/12032973/setting-application-resources-through-c-sharp">Stack Overflow</a> if anyone knew an answer. After some tips from some brilliant minds, I got inspired and came up with a solution.</p>
<p>Adding new resources to the application isn't a problem, nor is removing them. All I had to do was to remove the resource with the key "ApplicationTitle" and add it again with the new string.</p>
</div>
</div>
</div>
</div>
<div class="row sqs-row">
<div class="col sqs-col-12 span-12">
<div id="block-c246f6a2c5b436498ae2" class="sqs-block code-block sqs-block-code" data-block-type="23">
<div class="sqs-block-content">
<pre class="source-code"><span class="cm-comment">// In MainPage.xaml#PhoneApplicationPage_Loaded event handler</span><br /><br /><span class="cm-comment">// Get the version number from the assembly</span><br /><span class="cm-keyword">var</span> <span class="cm-variable">nameHelper</span> = <span class="cm-keyword">new</span> <span class="cm-variable">System</span>.<span class="cm-property">Reflection</span>.<span class="cm-property">AssemblyName</span>(<span class="cm-variable">System</span>.<span class="cm-property">Reflection</span>.<span class="cm-property">Assembly</span>.<span class="cm-property">GetExecutingAssembly</span>().<span class="cm-property">FullName</span>);<br /><br /><span class="cm-comment">// Check whether the resource is present and then delete it</span><br /><span class="cm-keyword">if</span>(<span class="cm-variable">Application</span>.<span class="cm-property">Current</span>.<span class="cm-property">Resources</span>.<span class="cm-property">Contains</span>(<span class="cm-string">"ApplicationTitle"</span>))<br />    <span class="cm-variable">Application</span>.<span class="cm-property">Current</span>.<span class="cm-property">Resources</span>.<span class="cm-property">Remove</span>(<span class="cm-string">"ApplicationTitle"</span>);<br /><br /><span class="cm-comment">// Add the resource again with the updated string</span><br /><span class="cm-variable">Application</span>.<span class="cm-property">Current</span>.<span class="cm-property">Resources</span>.<span class="cm-property">Add</span>(<span class="cm-string">"ApplicationTitle"</span>, <span class="cm-variable">string</span>.<span class="cm-property">Format</span>(<span class="cm-string">"FUEL CONSUMPTION - v{0}.{1}"</span>, <span class="cm-variable">nameHelper</span>.<span class="cm-property">Version</span>.<span class="cm-property">Major</span>.<span class="cm-property">ToString</span>(), <span class="cm-variable">nameHelper</span>.<span class="cm-property">Version</span>.<span class="cm-property">Minor</span>.<span class="cm-property">ToString</span>()));</pre>
</div>
</div>
</div>
</div>
<div id="yui_3_17_2_3_1429625168973_1261" class="row sqs-row">
<div id="yui_3_17_2_3_1429625168973_1260" class="col sqs-col-12 span-12">
<div id="block-f3d80dc54882631f5b5e" class="sqs-block html-block sqs-block-html" data-block-type="2">
<div id="yui_3_17_2_3_1429625168973_1259" class="sqs-block-content">
<p>This didn't yield the right result either. It did work if I navigated to another page in the application. As it turns out, you see; the resources are not dependency properties, which means they don't send an event for changes made in the object. That's why the application title does not update in MainPage.xaml. This is however easily remedied by putting the previous code into the Application_Launching event handler which launches before the PhoneApplicationPage is even called, as per the <a href="http://msdn.microsoft.com/en-us/library/windowsphone/develop/ff817008(v=vs.92).aspx">Windows Phone execution model</a>.</p>
<p id="yui_3_17_2_3_1429625168973_1258">That's how I finally managed to get a "dynamic" application title without having to add code to every PhoneApplicationPage I make, I only have to bind the title of the page to the application resource.</p>
</div>
</div>
</div>
</div>]]></content>
      </BlogPost>
    </BlogPage>
    <ProjectsPage id="1066" parentID="1050" level="2" creatorID="0" sortOrder="1" createDate="2015-04-20T22:33:19" updateDate="2015-04-21T20:22:56" nodeName="Projects" urlName="projects" path="-1,1050,1066" isDoc="" nodeType="1063" creatorName="Jon Stødle" writerName="Jon Stødle" writerID="0" template="1062" nodeTypeAlias="ProjectsPage">
      <title><![CDATA[Projects]]></title>
      <text><![CDATA[These are my projects of past and present]]></text>
      <Project id="1068" parentID="1066" level="3" creatorID="0" sortOrder="0" createDate="2015-04-20T23:05:01" updateDate="2015-04-23T20:32:39" nodeName="Movie Watchlist" urlName="movie-watchlist" path="-1,1050,1066,1068" isDoc="" nodeType="1065" creatorName="Jon Stødle" writerName="Jon Stødle" writerID="0" template="1067" nodeTypeAlias="Project">
        <title><![CDATA[Movie Watchlist]]></title>
        <description><![CDATA[<p>Movie Watchlist lets you keep track of the movies you want to watch. Now it's easy to keep track of the backlog of movies. The app keeps a simple list of the movies you want to watch.</p>
<p>When adding a movie you have the choise of doing a web search for the movie; doing this executes a search on IMDb and returns genuine results from the largest and most extensive movie and tv database on the web.</p>
<p>You can get more information about the movie by opening a specific info page about each movie. All the info on this page is fetched directly from IMDb.</p>
<p>Movie Watchlist also has you covered if you are changing phones or has any reason to fear that your entire collection should disappear. Easy integration with SkyDrive let's you back up your lists to the web.</p>
<p id="yui_3_17_2_3_1429643176559_1143">Should you be in the generous corner you can remove the ad banner via in app purchase.</p>]]></description>
        <images><![CDATA[1073,1074,1075,1076]]></images>
        <storeLink><![CDATA[http://www.windowsphone.com/s?appid=c45d4a54-9e75-4c06-aa08-5296779ebc26]]></storeLink>
        <contactEmail><![CDATA[dev@jonstodle.com]]></contactEmail>
        <banner><![CDATA[{
  "focalPoint": {
    "left": 0.5,
    "top": 0.5
  },
  "src": "/media/1006/appicon.png",
  "crops": [
    {
      "alias": "Project Banner",
      "width": 800,
      "height": 200,
      "coordinates": {
        "x1": 0,
        "y1": 0.34888888888888892,
        "x2": 0,
        "y2": 0.40111111111111108
      }
    }
  ]
}]]></banner>
      </Project>
    </ProjectsPage>
  </Home>
</root>